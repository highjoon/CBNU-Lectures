# 반복 구조를 사용하면
"""
for x in range(5):          # 실제로 [0],[1],[2],[3],[4] 가 수정
    print("환영합니다.")
"""

# 리스트에 대한 반복
"""
for name in ['철수','영희','길동','유신']:
    print("안녕!"+name)
"""

# 정수 리스트에 대한 반복
"""
for x in [0,1,2,3,4,5,6,7,8,9]:
    print(x,end=" ")     # end = " "  -> 밑으로 안내려가고 한줄로 표시. (글자와 글자 공간 사이에 스페이스)
"""
print()

# 예제
""""
sum = 0
for x in range(10): # 0 ~ 9
    sum = sum + x
print(sum)
"""

# 문자열 반복
"""
for c in "abcdef":
    print(c,end=" ")
"""
print()

# Lab: 정수들의 합
# 1부터 사용자가 입력한 수 n까지 더해서 (1+2+3+...+n)을 계산하는 프로그램을 작성하여 보자.
# for 문을 사용하면 간명하게 합계를 구할 수 있다.
# 어디까지 계산할까요: 10
# 1부터  10 까지의 정수의 합=  55
"""
num = int(input("어디까지 계산할까요 :"))
sum = 0
for i in range(1,num+1):
    sum+=i
print("1부터",num,"까지의 정수의 합 =",sum)
"""

# Lab: 팩토리얼 계산
# for문을 이용하여서 팩토리얼을 계산해보자.
# 팩토리얼 n!은 1부터 n까지의 정수를 모두 곱한 것을 의미한다. 즉, n! = 1×2×3×……×(n-1)×n이다.
# 정수를 입력하시오: 10
# 10 !은 3628800.0 이다.
"""
num = int(input("정수를 입력하시오 :"))
factorial = 1
for i in range (1,num+1):
    factorial = factorial * i
print("{}!은 {} 이다".format(num,factorial))
"""

# Lab: 온도 변환 테이블 출력
# 화씨온도-섭씨온도 변환 테이블을 출력하는 프로그램을 작성하여 보자.
# 반복 구조를 사용하여야 하고 정수보다는 실수로 출력하는 편이 정확하다.
# 화씨 0도부터 100도까지, 10도 단위로 증가시키면서 대응되는 섭씨온도를 옆에 출력한다.
# C = (F-32)×5/9 수식을 사용한다.
# 0  -> -17.78
# 10  -> -12.22
# 20  -> -6.67
# 30  -> -1.11
# 40  -> 4.44
# 50  -> 10.0
# 60  -> 15.56
# 70  -> 21.11
# 80  -> 26.67
# 90  -> 32.22
# 100  -> 37.78
# 화씨 = ftemp, 섭씨 = ctemp
"""
for i in range(0,101,10):
    ctemp = (i-32.0)*5.0/9.0
    print("화씨 =",i,"섭씨 =",round(ctemp,2))
"""

# Lab: 화면에 별 그리기
# 터틀 그래픽을 이용하여 별을 화면에 그려보자.
"""
import turtle

t=turtle.Turtle()

for i in range(5):
    t.forward(50)
    t.right(144)
"""

# Lab: 화면에 다각형 그리기
# 터틀 그래픽을 이용하여 다각형을 화면에 그려보자.
"""
import turtle

polygon = turtle.Turtle()

num_sides = 6
side_length = 70
angle = 360.0 / num_sides

for i in range(num_sides):
    polygon.forward(side_length)
    polygon.right(angle)
"""

# Lab: 화면에 사각형 그리기
# 터틀 그래픽을 이용하여 사각형을 3개 그려보자. 각 사각형은 20도씩 기울어져 있다.
"""
import turtle

for i in range(3):
    turtle.left(20)

    turtle.forward(50)
    turtle.left(90)
    turtle.forward(50)
    turtle.left(90)
    turtle.forward(50)
    turtle.left(90)
    turtle.forward(50)
    turtle.left(90)
"""

# Lab: 함수 그래프 그리기
# 싸인(sine) 그래프를 반복문을 이용하여서 그려보자.
# 싸인 함수는 수학, 물리학, 공학에서 아주 많이 나타나는 함수이다.
# 이번에도 터틀 그래픽의 기능을 사용하여 본다.
"""
import math
import turtle

t = turtle.Turtle()

t.pendown()			# 터틀 객체의 펜을 내린다. 
for angle in range(360):		# 360번 반복한다. 
    y = math.sin(math.radians(angle)) # angle 값에 대응되는 싸인값을 계산한다. 
    scaledX = angle		# x축의 좌표값을 각도로 한다. 
    scaledY = y * 100		# y축의 좌표값을 싸인값으로 한다. 
    t.goto (scaledX, scaledY) # 터틀 객체를 (scaledX, scaledY)로 이동시킨다. 
t.penup()			# 터틀 객체의 펜을 올린다.
"""

# 예제
# 0, 1, 2, ..,, 9까지를 차례대로 화면에 출력하는 프로그램을 작성하여 보자.
# 변수 i의 값을 0으로 초기화하고 반복하면서 i를 출력하고 1씩 증가시키면 된다.
# i가 10보다 작을 때까지 반복시키면 된다.
"""
i = 0
while i < 10:
    print(i, end=" ")
    i += 1
"""

# Lab: (1+2+3+...+9+10) 계산하기
# (1+2+3+...+9+10)의 값을 계산하는 프로그램을 작성하여 보자.
# 이것은 공식으로도 계산할 수 있으나 우리는 반복 구조를 사용해보자.
# 합계= 55
"""
i = 1
sum = 0

while i <= 10:
    sum = sum + i
    i = i + 1
print("합계 =",sum)
"""

# Lab: 팩토리얼 계산
# 팩토리얼을 계산하는 프로그램을 작성하여 보자. 팩토리얼 n!은 1부터 n까지의 정수를 모두 곱한 것을 의미한다.
# 즉, n! = 1×2×3×……×(n-1)×n이다. 예를 들어서 10!을 계산하는 프로그램을 작성하여 보자.
# 10!은 3628800입니다.
"""
i = 1
fact = 1
num = int(input("정수를 입력하세요 :"))

while i <= num:
    fact = fact * i
    i = i + 1
print("{}! 은 {}입니다.".format(num,fact))
"""

# Lab: 구구단 출력
# 구구단 중에서 3단을 반복문을 이용하여 출력하여 보자. 3*1, 3*2, 3*3, .., 3*9까지 9번 반복시키면 출력하면 될 것이다.
# 3*1 = 3
# 3*2 = 6
# 3*3 = 9
# 3*4 = 12
# 3*5 = 15
# 3*6 = 18
# 3*7 = 21
# 3*8 = 24
# 3*9 = 27
"""
dan = 3
i = 0
while i <= 9:
    print("{} * {} = {}".format(dan,i,dan*i))
    i = i + 1
"""

# Lab: 배수의 합 계산 프로그램
# 1부터 100사이의 모든 3의 배수의 합을 계산하여 출력하는 프로그램을 반복 구조를 사용하여 작성하라.
# 1부터 100 사이의 모든 3의 배수의 합은 1683입니다.
"""
i = 3
sum = 0
while i <= 100:
    sum = sum + i
    i = i + 3
print("1부터 100사이의 모든 3의 배수의 합은 {}입니다.".format(sum))
"""

# Lab: 자리수의 합
# 정수 안의 각 자리수의 합을 계산하는 프로그램을 작성해보자. 예를 들어서 1234라면 (1+2+3+4)를 계산하는 것이다.
# 자리수의 합은 10입니다.



# 보초값 (sentinel) 사용 예제
# 사용자로부터 임의의 개수의 성적을 받아서 평균을 계산한 후에 출력하는 프로그램 을 작성하여 보자.
# 센티널로는 음수의 값을 사용하자.
# 종료하려면 음수를 입력하시오
# 성적을 입력하시오: 10
# 성적을 입력하시오: 20
# 성적을 입력하시오: 30
# 성적을 입력하시오: -1
# 성적의 평균은 20.000000입니다.

# 국영수 성적 받아서 평균, 총점, 총점에 대한 석차, 과목별 석차, 해당되는 성적 출력, 석차별로 등급 출력 (전체 인원별, 과목별)
# 입력은 학생 이름, 학번, 국영수 점수 (총 5개)
# 각 과목별 석차, 전체 인원별 석차,
# 2주 안에 완성.
# 이캠퍼스 확인.

# Lab: 숫자 맞추기 게임
# 앞에 등장하였던 숫자 맞추기 게임 업그레이드
# 1부터 100 사이의 숫자를 맞추시오
# 숫자를 입력하시오: 50
# 낮음!
# 숫자를 입력하시오: 75
# 낮음!
# 숫자를 입력하시오: 82
# 낮음!
# 숫자를 입력하시오: 91
# 높음!
# 숫자를 입력하시오: 86
# 낮음!
# 숫자를 입력하시오: 87
# 축하합니다. 시도횟수= 6

# Lab: 피타고라스 삼각형 찾기
# 피타고라스의 정리는 직각 삼각형에서 직각을 낀 두 변의 길이를 a, b라고 하고,
# 빗변의 길이를 c라고 하면 의 수식이 성립한다는 것이다.
# 각 변의 길이가 100보다 작은 삼각형 중에서 피타고라스의 정리가 성립하는 직각 삼각형은 몇 개나 있을까?

# 예제
# 문자열을 받아서 모음을 전부 없애는 코드는 다음과 같이 작성할 수 있다.
# 문자열을 입력하시오: kkkoommm
# kkkmmm
"""
s = input('문자열을 입력하시오: ')
vowels = "aeiouAEIOU"
result = ""
for letter in s:
    if letter not in vowels:
        result += letter
print(result)
"""

# 예제
# 문자열 중에서 자음과 모음의 개수를 집계하는 프로그램을 작성하여 보자.
# 문자열을 입력하시오: iokkk
# 모음의 개수 2
# 자음의 개수 3

# Lab: 문자열 조사
# 문자열을 조사하여서 알파벳 문자의 개수, 숫자의 개수, 스페이스의 개수를 출력하는 프로그램을 작성하라.
# 문자열을 입력하시오: Meav-01-I Dreamt I Dwelt In Marble Halls-192k.mp3
# 알파벳 문자의 개수= 33
# 숫자 문자의 개수= 6
# 스페이스  문자의 개수= 6

# Lab: 계좌번호 처리
# 인터넷 뱅킹을 사용하다보면 계좌번호를 입력할 때, "312-02-1234567"과 같이 "-"을 사용하면 안 된다는 경고를 받는다.
# 사용자로부터 "-"가 포함된 계좌 번호를 받아서 "-"을 삭제한 문자열을 만들어보자.
# 계좌번호를  입력하시오: 312-02-1234567
# 312021234567


